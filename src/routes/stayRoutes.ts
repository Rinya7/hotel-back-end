// routes/stayRoutes.ts
import { Router } from "express";
import {
  getCurrentStays,
  createStayForRoom,
  updateStayByDates,
  closeStay,
  getStaysForRoom,
} from "../controllers/stayController";
import {
  authenticateToken,
  isEditorOrAdmin, // admin + editor
  isAdmin, // —Ç–æ–ª—å–∫–æ admin (–Ω–∞ –±—É–¥—É—â–µ–µ –¥–ª—è delete)
} from "../middlewares/authMiddleware";

const router = Router();

// –ü–æ—Ç–æ—á–Ω—ñ –±—Ä–æ–Ω—ñ/–∑–∞—Å–µ–ª–µ–Ω–Ω—è –ø–æ –≤—Å—å–æ–º—É –≥–æ—Ç–µ–ª—é (–¥–ª—è dashboard)
// (–≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ Stay, —è–∫—ñ –Ω–µ completed/cancelled)
// GET /rooms/stays/current
router.get(
  "/stays/current",
  authenticateToken,
  isEditorOrAdmin,
  getCurrentStays
);

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—Ä–æ–Ω—ñ/–∑–∞—Å–µ–ª–µ–Ω–Ω—è –ø–æ –∫—ñ–º–Ω–∞—Ç—ñ
// POST /rooms/number/:roomNumber/stays
router.post(
  "/number/:roomNumber/stays",
  authenticateToken,
  isEditorOrAdmin,
  createStayForRoom
);

// üìú –Ü—Å—Ç–æ—Ä—ñ—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ–π –∫—ñ–º–Ω–∞—Ç—ñ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ ?from=YYYY-MM-DD&to=YYYY-MM-DD)
// GET /rooms/number/:roomNumber/stays
router.get(
  "/number/:roomNumber/stays",
  authenticateToken,
  isEditorOrAdmin,
  getStaysForRoom
);

// ‚úèÔ∏è  –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—ñ/–∑–∞—Å–µ–ª–µ–Ω–Ω—è (–ø–æ –≤–∏—Ö—ñ–¥–Ω–∏–º checkIn/checkOut)
// PUT /room/:roomNumber
// (–¥–ª—è –∞–¥–º—ñ–Ω–∞/editor)
// PUT /rooms/number/:roomNumber/stays
router.put(
  "/number/:roomNumber/stays",
  authenticateToken,
  isEditorOrAdmin,
  updateStayByDates
);

// ‚ùå –ó–∞–∫—Ä–∏—Ç–∏ (completed) / –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏ (cancelled)
// PUT /rooms/number/:roomNumber/stays/close
router.put(
  "/number/:roomNumber/stays/close",
  authenticateToken,
  isEditorOrAdmin,
  closeStay
);

// –ï—Å–ª–∏ –∫–æ–≥–¥–∞‚Äë–Ω–∏–±—É–¥—å –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ Stay ‚Äî –ª—É—á—à–µ —Ç–æ–ª—å–∫–æ admin
// router.delete(
//   "/rooms/number/:roomNumber/stays",
//   authenticateToken,
//   isAdmin,
//   deleteStayByDates
// );

export default router;
