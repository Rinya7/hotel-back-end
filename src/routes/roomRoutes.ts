import { Router } from "express";
import {
  getAllRooms,
  getRooms,
  createRoom,
  updateRoom,
  updateRoomStatus,
  deleteRoom,
} from "../controllers/roomController";

import {
  authenticateToken,
  isAdmin,
  isEditorOrAdmin,
  isSuperadmin,
} from "../middlewares/authMiddleware";
import {
  createStayForRoom,
  getStaysForRoom,
} from "../controllers/stayController";
import {
  getAvailabilityForAllRooms,
  getRoomAvailability,
} from "../controllers/roomAvailabilityController";

const router = Router();
// üîì –ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö –∫—ñ–º–Ω–∞—Ç –ø–æ –≤—Å—ñ–π —Å–∏—Å—Ç–µ–º—ñ –¥–ª—è superadmina
router.get("/all", authenticateToken, isSuperadmin, getAllRooms);
// üîì –ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö –∫—ñ–º–Ω–∞—Ç –≤ –≥–æ—Ç–µ–ª—ñ
router.get("/", authenticateToken, isEditorOrAdmin, getRooms);

// ‚ûï –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
router.post("/", authenticateToken, isAdmin, createRoom);

// ‚úèÔ∏è –ü–æ–≤–Ω–µ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫—ñ–º–Ω–∞—Ç–∏ (wifi, capacity, —ñ —Ç.–¥.)
router.put(
  "/number/:roomNumber",
  authenticateToken,
  isEditorOrAdmin,
  updateRoom
);

// üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ —Å—Ç–∞—Ç—É—Å—É (free/booked/occupied)
router.put(
  "/number/:roomNumber/status",
  authenticateToken,
  isEditorOrAdmin,
  updateRoomStatus
);

// ‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫—ñ–º–Ω–∞—Ç–∏
router.delete("/number/:roomNumber", authenticateToken, isAdmin, deleteRoom);

// ‚ûï‚ûï‚ûï Stay Routes ‚ûï‚ûï‚ûï

//  —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è/–∑–∞—Å–µ–ª–µ–Ω–Ω—è –≤ –∫—ñ–º–Ω–∞—Ç—ñ
router.post(
  "/number/:roomNumber/stays",
  authenticateToken,
  isEditorOrAdmin,
  createStayForRoom
);

// —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∂–∏–≤–∞–Ω—å –ø–æ –∫—ñ–º–Ω–∞—Ç—ñ
router.get(
  "/number/:roomNumber/stays",
  authenticateToken,
  isEditorOrAdmin,
  getStaysForRoom
);

//GET /rooms/number/101/availability?from=2025-08-20&to=2025-08-25
// Availability: –æ–¥–∏–Ω–∏—á–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∞

router.get(
  "/number/:roomNumber/availability",
  authenticateToken,
  isEditorOrAdmin,
  getRoomAvailability
);

// Availability: –≤—Å—ñ –∫—ñ–º–Ω–∞—Ç–∏ (–¥–ª—è –¥–æ—à–∫–∏)
router.get(
  "/availability",
  authenticateToken,
  isEditorOrAdmin,
  getAvailabilityForAllRooms
);

export default router;
